<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.samsung.smart.solution</groupId>
	<artifactId>retail</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-RELEASE</version>

	<name>retail Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.finalName>retail</project.build.finalName>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.6</java.version>
		<jetty.version>6.1.4</jetty.version>
		<spring.version>3.2.0.RELEASE</spring.version>
		<springsecurity.version>3.2.0.RELEASE</springsecurity.version>
		<spring.batch.version>2.2.0.RELEASE</spring.batch.version>			
		<log4j.version>1.2.17</log4j.version>
		<!-- SLF4J 1.5.11 and 1.6.0 versions are not compatible -->
		<slf4j.version>1.5.11</slf4j.version>
		<java.version>1.6</java.version>
		<junit.version>4.8.2</junit.version>
		<maven.encoding>UTF-8</maven.encoding>
		<org.mybatis.version>3.2.3</org.mybatis.version>
		<org.mybatis.spring.version>1.2.1</org.mybatis.spring.version>

	</properties>


	<dependencies>
	
		<!-- GCM Push Server -->	
		<dependency>
			<groupId>com.ganyo</groupId>
			<artifactId>gcm-server</artifactId>
			<version>1.0.2</version>
		</dependency>
	
		<!-- DB Dependencies START -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- DB Dependencies END -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>


		<!-- Bean Validation JSR-303 Dependencies START -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<!-- Hibernate Validator 5.x (EL) in version 2.2 Tomcat 6.0.x implements 
			JSP 2.1 and EL 2.1 ExpressionFactory.newInstance() was introduced in EL 2.2 
			To do the latter, replace the JAR files el-api.jar and and jasper-el.jar 
			in $CATALINE_HOME/lib with an EL 2.2 implementation, e.g. from Tomcat 7. -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.0.1.Final</version>
		</dependency>
		<!-- Bean Validation Test -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Bean Validation JSR-303 Dependencies END -->

		<!-- DB Connector Setting START -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.31</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${org.mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${org.mybatis.spring.version}</version>
		</dependency>
		<!-- DB Connector Setting END -->


		<!--Spring Setting START -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
		    </exclusions>			
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<!-- Spring Security JWT is a small utility library for encoding and decoding 
				JSON Web Tokens. -->
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>1.0.2.RELEASE</version>
		</dependency>
		<!-- Spring Batch dependencies START -->
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>${spring.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-infrastructure</artifactId>
			<version>${spring.batch.version}</version>
		</dependency> 
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<version>${spring.batch.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-admin-manager</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>		
		<!-- Spring Batch dependencies END -->
		
		<!--Spring Setting END -->
		
		<!-- tomcat에서 javax.el.ExpressionFactory 없다는 에러가 발생할때 필요 -->
		<!-- Tomcat 6.0.x implements JSP 2.1 and EL 2.1 Hibernate Validator 5.x 
			(EL) in version 2.2 ExpressionFactory.newInstance() was introduced in EL 
			2.2 To do the latter, replace the JAR files el-api.jar and and jasper-el.jar 
			in $CATALINE_HOME/lib with an EL 2.2 implementation, e.g. from Tomcat 7. -->
		<!-- <dependency> <groupId>javax.el</groupId> <artifactId>el-api</artifactId> 
			<version>2.2</version> <scope>provided</scope> </dependency> <dependency> 
			<groupId>org.apache.tomcat</groupId> <artifactId>jasper-el</artifactId> <version>6.0.39</version> 
			</dependency> -->
			
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
						
		<!--URL Rewrite -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- slf4j Base Setting START -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- slf4j Base Setting END -->

		<!-- slf4j Binding CHOICE for (1)NOP (2)System.out (3)log4j (4)commons 
			logging START -->
		<!-- Binding for (1)NOP, silently discarding all logging. -->
		<!-- dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-nop</artifactId> 
			<version>${slf4j.version}</version> </dependency -->
		<!-- Binding for (2)System.out -->
		<!-- dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-simple</artifactId> 
			<version>${slf4j.version}</version> </dependency -->
		<!--Binding for (3)log4j version 1.2.x -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--Binding for (4)commons logging over slf4j -->
		<!-- dependency> <groupId>org.slf4j</groupId> <artifactId>jcl-over-slf4j</artifactId> 
			<version>${slf4j.version}</version> <scope>runtime</scope> </dependency -->
		<!-- slf4j Binding CHOICE for (1)NOP (2)System.out (3)log4j (4)commons 
			logging END -->

		<!-- Apache Commons Upload START -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- Apache Commons Upload END -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JSON START -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>1.7.1</version>
		</dependency>
		<!-- JSON END -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>

<!-- 		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			version>3.1.0</version
			<version>2.5</version>
			<scope>provided</scope>
		</dependency> -->

	</dependencies>

	

	<build>
		<finalName>${project.build.finalName}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Embeded Tomcat START -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<path>/${project.build.finalName}</path>
					<port>8090</port>
				</configuration>
			</plugin>
			<!-- Embeded Tomcat START -->

		</plugins>
	</build>

</project>
